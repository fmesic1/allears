[{"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\reportWebVitals.js":"3","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\context\\EntrenceScreenContext.js":"4","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\ScoreBreakdown\\ScoreBreakdown.js":"5","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\LandingScreen.js":"6","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\Initiatives\\Initiatives.js":"7","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Footer\\Footer.js":"8","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Header\\Header.js":"9","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Entrence\\Entrence.js":"10","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\allears.js":"11","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\activeNavLinkDecoration.js":"12","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\ColorfulCircle.js":"13","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\ScoreCard\\ScoreCard.js":"14","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Buttons\\Button.js":"15","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Dropdown\\Dropdown.js":"16","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\hooks\\useWindowDimensions.js":"17","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\HumanRelations\\HumanRelations.js":"18","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\HeroSection\\HeroSection.js":"19","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\Marketing\\Marketing.js":"20","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\DecorationOblique.js":"21","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\ProgressBar\\ProgressBar.js":"22","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\signatureJamesSmith.js":"23","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\ImportanceGraph\\ImportanceGraph.js":"24","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\DescriptionFrame\\DescriptionFrame.js":"25","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\HumanResourcesCard\\HumanResourcesCard.js":"26","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\SectionFooter\\SectionFooter.js":"27","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\MeasurmentGraph\\MeasurmentGraph.js":"28","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\SimpleDescriptionFrame\\SimpleDescriptionFrame.js":"29","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\ComparisonGraph\\ComparisonGraph.js":"30","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\PieChartComplex\\PieChartComplex.js":"31","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\LineGraph\\LineGraph.js":"32","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\HumanRelations\\components\\PercentageGraphs\\PercentageGraphs.js":"33","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\HumanRelations\\components\\PeopleGraphs\\PeopleGraphs.js":"34","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\Ig.js":"35","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\Dash.js":"36","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\BarChart.js":"37","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\Mail.js":"38","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\twitter.js":"39","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\PercentageGraph\\PercentageGraph.js":"40","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\PeoplesGraph\\PeoplesGraph.js":"41","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\Man.js":"42","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\Dashboard\\Dashboard.js":"43","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\Dashboard\\components\\HRSection\\HRSection.js":"44","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\PieChartComplex\\PieChartComplexDummyGraph.js":"45"},{"size":623,"mtime":1612948818768,"results":"46","hashOfConfig":"47"},{"size":1133,"mtime":1616705713628,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"47"},{"size":513,"mtime":1612950642398,"results":"50","hashOfConfig":"47"},{"size":7184,"mtime":1616706933799,"results":"51","hashOfConfig":"47"},{"size":797,"mtime":1612952760613,"results":"52","hashOfConfig":"47"},{"size":6529,"mtime":1612874214561,"results":"53","hashOfConfig":"47"},{"size":345,"mtime":1612780504247,"results":"54","hashOfConfig":"47"},{"size":3485,"mtime":1616705662240,"results":"55","hashOfConfig":"47"},{"size":5667,"mtime":1612951161237,"results":"56","hashOfConfig":"47"},{"size":7272,"mtime":1611828786807,"results":"57","hashOfConfig":"47"},{"size":541,"mtime":1612258209994,"results":"58","hashOfConfig":"47"},{"size":2465,"mtime":1612349727145,"results":"59","hashOfConfig":"47"},{"size":3237,"mtime":1616706991894,"results":"60","hashOfConfig":"47"},{"size":590,"mtime":1612141503813,"results":"61","hashOfConfig":"47"},{"size":2409,"mtime":1611929566002,"results":"62","hashOfConfig":"47"},{"size":640,"mtime":1612348621430,"results":"63","hashOfConfig":"47"},{"size":5530,"mtime":1612289809182,"results":"64","hashOfConfig":"47"},{"size":3080,"mtime":1612341556429,"results":"65","hashOfConfig":"47"},{"size":4321,"mtime":1612431652646,"results":"66","hashOfConfig":"47"},{"size":454,"mtime":1611914740728,"results":"67","hashOfConfig":"47"},{"size":615,"mtime":1611839201402,"results":"68","hashOfConfig":"47"},{"size":9548,"mtime":1612341466833,"results":"69","hashOfConfig":"47"},{"size":1519,"mtime":1612256152459,"results":"70","hashOfConfig":"47"},{"size":2974,"mtime":1611658917264,"results":"71","hashOfConfig":"47"},{"size":1176,"mtime":1616685599752,"results":"72","hashOfConfig":"47"},{"size":1272,"mtime":1613376096020,"results":"73","hashOfConfig":"47"},{"size":1610,"mtime":1612288066464,"results":"74","hashOfConfig":"47"},{"size":922,"mtime":1611740255845,"results":"75","hashOfConfig":"47"},{"size":6929,"mtime":1616703911797,"results":"76","hashOfConfig":"47"},{"size":5714,"mtime":1616704220950,"results":"77","hashOfConfig":"47"},{"size":3939,"mtime":1612286519962,"results":"78","hashOfConfig":"47"},{"size":1547,"mtime":1612340364164,"results":"79","hashOfConfig":"47"},{"size":1620,"mtime":1611828432457,"results":"80","hashOfConfig":"47"},{"size":1267,"mtime":1613373407427,"results":"81","hashOfConfig":"47"},{"size":277,"mtime":1611565485368,"results":"82","hashOfConfig":"47"},{"size":1152,"mtime":1611225310912,"results":"83","hashOfConfig":"47"},{"size":1018,"mtime":1611570097337,"results":"84","hashOfConfig":"47"},{"size":1600,"mtime":1613373983766,"results":"85","hashOfConfig":"47"},{"size":1376,"mtime":1612340530644,"results":"86","hashOfConfig":"47"},{"size":1021,"mtime":1616763842466,"results":"87","hashOfConfig":"47"},{"size":1269,"mtime":1616763671410,"results":"88","hashOfConfig":"47"},{"size":11780,"mtime":1616763946420,"results":"89","hashOfConfig":"47"},{"size":2834,"mtime":1616763819317,"results":"90","hashOfConfig":"47"},{"size":26496,"mtime":1616705120950,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1xp776a",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\index.js",[],["196","197"],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\App.js",["198"],"import React, {useContext} from 'react';\n\nimport LandingScreen from './pages/LandingScreen/LandingScreen';\nimport ScoreBreakdown from './pages/ScoreBreakdown/ScoreBreakdown';\nimport Header from './components/Header/Header';\nimport Initiatives from './pages/Initiatives/Initiatives';\nimport Footer from './components/Footer/Footer';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Entrence from './components/Entrence/Entrence';\nimport { EntrenceContext } from './context/EntrenceScreenContext';\nimport Dashboard from './pages/Dashboard/Dashboard';\n\nconst App = () => {\n\n  var {seen} = useContext(EntrenceContext);\n\n  return (\n      <Router>\n        {\n          !seen ? \n          <Entrence />\n          :\n          <div>\n            <Header />\n              <Switch>\n                <Route path = \"/initiatives\" component = {Initiatives} />\n                <Route path = \"/scorebreakdown\" component = {ScoreBreakdown} />\n                <Route path = \"/\" component = {Dashboard} />\n              </Switch>\n            <Footer />\n          </div>\n        }\n      </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\reportWebVitals.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\context\\EntrenceScreenContext.js",["199"],"import React, { useState } from 'react';\r\n\r\nconst EntrenceContext = React.createContext();\r\n\r\nfunction EntrenceScreenSeen({children}){\r\n    var reloaded = performance.navigation.type == 1 ? true : false\r\n\r\n    var [seen, setSeen] = useState(reloaded);\r\n\r\n    var setToSeen = () => {\r\n        setSeen(true);\r\n    }\r\n\r\n    return (\r\n        <EntrenceContext.Provider value={{seen, setToSeen}}>\r\n            {children}\r\n        </EntrenceContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport {EntrenceContext, EntrenceScreenSeen};","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\ScoreBreakdown\\ScoreBreakdown.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\LandingScreen.js",["200","201","202","203","204","205"],"import React, { useContext, useEffect } from 'react';\r\n\r\nimport classes from './LandingScreen.module.css';\r\nimport Header from './../../components/Header/Header';\r\nimport Marketing from './components/Marketing/Marketing';\r\nimport HumanRelations from './components/HumanRelations/HumanRelations';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport HeroSection from './components/HeroSection/HeroSection';\r\nimport Entrence from '../../components/Entrence/Entrence';\r\nimport { EntrenceContext } from '../../context/EntrenceScreenContext';\r\n\r\nconst LandingScreen = () => {\r\n\r\n    return (\r\n        <section className={classes.content}>    \r\n            <HeroSection />\r\n            <Marketing />\r\n            <HumanRelations />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LandingScreen;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\Initiatives\\Initiatives.js",["206"],"import React from 'react';\r\n\r\nimport classes from './Initiatives.module.css';\r\nimport Dropdown from '../../components/Dropdown/Dropdown';\r\n\r\nconst Initiatives = () => {\r\n\r\n    var initiatives_items = [\r\n        {\r\n            title: \"Marketing\",\r\n            decorationColor: \"#F97F6E\"\r\n        },\r\n        {\r\n            title: \"Brand\",\r\n            decorationColor: \"#F9B16E\",\r\n            details: [\r\n                {\r\n                    what: \"Build brand inclusive guideline\",\r\n                    when: \"Q1 2021\",\r\n                    description: \"Maecenas luctus purus orci, in malesuada nibh bibendum ut. In ac sagittis nibh. Phasellus pharetra iaculis felis at cursus. Duis quis nisl dui. In efficitur in purus in dictum. Curabitur pellentesque gravida nunc, quis lobortis nisl sodales iaculis. Donec id luctus nisl. Curabitur porta facilisis orci, a aliquam magna finibus vitae. Praesent non convallis mi, a vulputate mi. Donec ligula ipsum, condimentum eget nulla eget, fringilla lacinia urna. Quisque ac leo vel ex ornare aliquet. Donec auctor magna libero, non faucibus augue consequat quis. Integer feugiat nisi vel lacus vestibulum, ac auctor tortor gravida. Vestibulum laoreet, elit sit amet rutrum rutrum, erat dolor auctor ligula, id efficitur nulla mi at ante.\"\r\n                },\r\n                {\r\n                    what: \"Build brand inclusive guideline\",\r\n                    when: \"Q1 2021\",\r\n                    description: \"Maecenas luctus purus orci, in malesuada nibh bibendum ut. In ac sagittis nibh. Phasellus pharetra iaculis felis at cursus. Duis quis nisl dui. In efficitur in purus in dictum. Curabitur pellentesque gravida nunc, quis lobortis nisl sodales iaculis. Donec id luctus nisl. Curabitur porta facilisis orci, a aliquam magna finibus vitae. Praesent non convallis mi, a vulputate mi. Donec ligula ipsum, condimentum eget nulla eget, fringilla lacinia urna. Quisque ac leo vel ex ornare aliquet. Donec auctor magna libero, non faucibus augue consequat quis. Integer feugiat nisi vel lacus vestibulum, ac auctor tortor gravida. Vestibulum laoreet, elit sit amet rutrum rutrum, erat dolor auctor ligula, id efficitur nulla mi at ante.\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            title: \"Customer Experience\",\r\n            decorationColor: \"#F9DA6E\"\r\n        },\r\n        {\r\n            title: \"Tech/Digital\",\r\n            decorationColor: \"#6EF9BF\",\r\n            details: [\r\n                {\r\n                    what: \"Build brand inclusive guideline\",\r\n                    when: \"Q1 2021\",\r\n                    description: \"Maecenas luctus purus orci, in malesuada nibh bibendum ut. In ac sagittis nibh. Phasellus pharetra iaculis felis at cursus. Duis quis nisl dui. In efficitur in purus in dictum. Curabitur pellentesque gravida nunc, quis lobortis nisl sodales iaculis. Donec id luctus nisl. Curabitur porta facilisis orci, a aliquam magna finibus vitae. Praesent non convallis mi, a vulputate mi. Donec ligula ipsum, condimentum eget nulla eget, fringilla lacinia urna. Quisque ac leo vel ex ornare aliquet. Donec auctor magna libero, non faucibus augue consequat quis. Integer feugiat nisi vel lacus vestibulum, ac auctor tortor gravida. Vestibulum laoreet, elit sit amet rutrum rutrum, erat dolor auctor ligula, id efficitur nulla mi at ante.\"\r\n                },\r\n                {\r\n                    what: \"Build brand inclusive guideline\",\r\n                    when: \"Q2 2021\",\r\n                    description: \"Maecenas luctus purus orci, in malesuada nibh bibendum ut. In ac sagittis nibh. Phasellus pharetra iaculis felis at cursus. Duis quis nisl dui. In efficitur in purus in dictum. Curabitur pellentesque gravida nunc, quis lobortis nisl sodales iaculis. Donec id luctus nisl. Curabitur porta facilisis orci, a aliquam magna finibus vitae. Praesent non convallis mi, a vulputate mi. Donec ligula ipsum, condimentum eget nulla eget, fringilla lacinia urna. Quisque ac leo vel ex ornare aliquet. Donec auctor magna libero, non faucibus augue consequat quis. Integer feugiat nisi vel lacus vestibulum, ac auctor tortor gravida. Vestibulum laoreet, elit sit amet rutrum rutrum, erat dolor auctor ligula, id efficitur nulla mi at ante.\"\r\n                },\r\n                ,\r\n                {\r\n                    what: \"Build brand inclusive guideline\",\r\n                    when: \"Q3 2021\",\r\n                    description: \"Maecenas luctus purus orci, in malesuada nibh bibendum ut. In ac sagittis nibh. Phasellus pharetra iaculis felis at cursus. Duis quis nisl dui. In efficitur in purus in dictum. Curabitur pellentesque gravida nunc, quis lobortis nisl sodales iaculis. Donec id luctus nisl. Curabitur porta facilisis orci, a aliquam magna finibus vitae. Praesent non convallis mi, a vulputate mi. Donec ligula ipsum, condimentum eget nulla eget, fringilla lacinia urna. Quisque ac leo vel ex ornare aliquet. Donec auctor magna libero, non faucibus augue consequat quis. Integer feugiat nisi vel lacus vestibulum, ac auctor tortor gravida. Vestibulum laoreet, elit sit amet rutrum rutrum, erat dolor auctor ligula, id efficitur nulla mi at ante.\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            title: \"Business\",\r\n            decorationColor: \"#68C0FF\"\r\n        },\r\n        {\r\n            title: \"Products & Services\",\r\n            decorationColor: \"#6880FF\"\r\n        },\r\n        {\r\n            title: \"Data\",\r\n            decorationColor: \"#AB68FF\"\r\n        },\r\n        {\r\n            title: \"Culture\",\r\n            decorationColor: \"#FF689E\"\r\n        },\r\n        {\r\n            title: \"Human Resources\",\r\n            decorationColor: \"#FF6A6A\"\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <section className={classes.initiatives}> \r\n            \r\n            <div className={classes.title}>Initiatives</div>\r\n\r\n            <div className={classes.content}>\r\n                {initiatives_items.map(function makeSingleDropdown(el, i){\r\n                    return (\r\n                        <div key={`${el.title}_${el.decorationColor}_${i}`}\r\n                            className={classes.content__dropdown}>\r\n                                <Dropdown \r\n                                    title = {el.title}\r\n                                    decorationColor = {el.decorationColor}\r\n                                    details={el.details}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Initiatives;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Header\\Header.js",["207","208","209","210"],"import React, { useState } from 'react'; \r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Gordita from './../../assets/fonts/Gordita-Regular.woff';\r\n\r\nimport classes from './Header.module.css';\r\nimport Logo from './../../assets/img/Logo.png';\r\nimport Button from './../Buttons/Button';\r\nimport ActiveNavLinkDecoration from './../../assets/svg/activeNavLinkDecoration';\r\n\r\nconst Header = ({match}) => {\r\n\r\n    var availableLinks = [\"/\", \"/scorebreakdown\", \"/initiatives\"]\r\n\r\n    let link = window.location.pathname;\r\n\r\n    if(!availableLinks.includes(link))\r\n        link = \"/\"\r\n\r\n    const [activeLink, setActiveLink] = useState(link);\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <nav className={classes.header__nav}>\r\n                <div className={classes.header__nav__link} onClick={() => setActiveLink(\"/\")}>\r\n                    <div className={classes.header__nav__link__item}>\r\n                        <Link to=\"/\" style={{ color: 'inherit', textDecoration: 'inherit'}}> Dashboard</Link>\r\n\r\n                        {\r\n                            activeLink == \"/\" ?\r\n                            <div className={classes.header__nav__link__item__ACTIVE}>\r\n                                <ActiveNavLinkDecoration width={68}/>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className={classes.header__nav__link} onClick={() => setActiveLink(\"/scorebreakdown\")}>\r\n                    <div className={classes.header__nav__link__item}>\r\n                        <Link to=\"/scorebreakdown\" style={{ color: 'inherit', textDecoration: 'inherit'}}>Score Breakdown</Link>\r\n                        {\r\n                            activeLink == \"/scorebreakdown\" ?\r\n                            <div className={classes.header__nav__link__item__ACTIVE}>\r\n                                <ActiveNavLinkDecoration width={110}/>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={classes.header__nav__link} onClick={() => setActiveLink(\"/initiatives\")}>\r\n                    <div className={classes.header__nav__link__item}>\r\n                        <Link to=\"/initiatives\" style={{ color: 'inherit', textDecoration: 'inherit'}}>Initiatives</Link>\r\n                        {\r\n                            activeLink == \"/initiatives\" ?\r\n                            <div className={classes.header__nav__link__item__ACTIVE}>\r\n                                <ActiveNavLinkDecoration width={60}/>\r\n                            </div>\r\n                            :\r\n                            null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <figure className={classes.header__logo}>\r\n                <img src={Logo} alt=\"The Kite Factory\" />\r\n            </figure>\r\n\r\n\r\n            {/*cta - call to action*/}\r\n            <div className={classes.header__evaluationCta}>\r\n                <div className={classes.header__evaluationCta__poweredBy}>POWERED BY ALL EARS</div>\r\n                <Button text=\"Request evaluation\" buttonStyle={{backgroundColor:\"#000000\", color: \"#FFFFFF\"}} />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Entrence\\Entrence.js",["211","212"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nimport ColorfulCircle from '../../assets/svg/ColorfulCircle';\r\nimport LogoWhite from './../../assets/img/LogoWhite.png';\r\nimport Button from './../Buttons/Button';\r\n\r\nimport useWindowDimensions from './../../hooks/useWindowDimensions';\r\nimport {EntrenceContext} from './../../context/EntrenceScreenContext';\r\nimport classes from './Entrence.module.css';\r\n\r\nconst Entrence = ({setToSeen}) => {\r\n\r\n    var [showWelcomeScreen, setShowWelcomeScreen] = useState(true);\r\n    var [showInfoScreen, setShowInfoScreen] = useState(false);\r\n\r\n    var {setToSeen} = useContext(EntrenceContext);\r\n    const { height } = useWindowDimensions();\r\n\r\n\r\n    return (\r\n        <div id=\"entrence\" className={classes.entrence}>\r\n            <header><img src={LogoWhite} alt=\"The Kite Factory Logo\" /></header>\r\n            <section className={classes.content}>\r\n\r\n                {/* in = boolean - true: ulazi u fazu appear, false - ulazi u fazu exit*/}\r\n                {/* timeout={2000} postavlja isti timeout i za appear i za exit a ako su nam animacije u css\r\n                postavljene na razlicite duzine trajanja moze se koristiti timeout={{exit: 2000, appear: 3000}}*/}\r\n                {/* unmountOnExit mora se postaviti na true da bi komponenta kada se zavrsi exit animacija nestala sa screena */}\r\n                {/* onExited - kada nestane sta se uradi ? postavi se showWelcomeScreen na false,\r\n                zbog promjene state-a rerenderuje se komponenta i onda pogleda in={false} i nece je prikazati, ide dalje..*/}\r\n                {/* appear={true} - by default appear animations are \"disabled\" and to enable them back we must put this line*/}\r\n                \r\n                <CSSTransition\r\n                    in={showWelcomeScreen}\r\n                    timeout={1250}\r\n                    classNames={{\r\n                        appear: classes.content__center__animation__appear,\r\n                        appearActive: classes.content__center__animation__appear__ACTIVE,\r\n                        exit: classes.content__center__animation__exit,\r\n                        exitActive: classes.content__center__animation__exit__ACTIVE\r\n                    }}\r\n                    unmountOnExit={true}\r\n                    appear={true}\r\n                    onEntered={setTimeout(() => setShowWelcomeScreen(false), 1250)}\r\n                    onExited={() => setShowInfoScreen(true)}>\r\n                    \r\n                        <div className={classes.content__center}>\r\n                            <div className={classes.content__center__hello}>Hello Kite Factory...</div>\r\n                            <div className={classes.content__center__welcome}>Welcome to your Inclusion and Belonging Journey</div>\r\n                        </div>\r\n        \r\n                </CSSTransition>\r\n                \r\n                <div onClick={setToSeen} onScrollCapture={setToSeen} onScroll={setToSeen}>\r\n                <CSSTransition\r\n                    in={showInfoScreen}\r\n                    timeout={1000}\r\n                    classNames={{\r\n                        appear: classes.content__center__animation__appear,\r\n                        appearActive: classes.content__center__animation__appear__ACTIVE\r\n                    }}\r\n                    mountOnEnter={true}\r\n                    unmountOnExit={true}\r\n                    appear={true}>\r\n\r\n                        <div id=\"content_center\" className={classes.content__center} \r\n                            style={{marginTop : height > 800 ? `6px` : `14px`}}>\r\n\r\n                            <ColorfulCircle height = {height}/>\r\n                            <div className={classes.content__center__button}>\r\n                                <Button text=\"Our mission\" showArrow buttonStyle={{backgroundColor: \"#212A47\", border: \"none\", color: \"white\"}}/>\r\n                            </div>\r\n                            <div className={classes.content__center__maturityIndex} \r\n                                style={{top: height > 800 ? `calc(50% - 68px)` : `calc(50% - 74px)`}}>\r\n                                Your Inclusion <br/>\r\n                                Maturity Index\r\n                            </div>\r\n                        </div>\r\n\r\n                </CSSTransition>\r\n                </div>\r\n\r\n\r\n                {/* {showWelcomeScreen & \r\n                <div className={classes.content__center}>\r\n                    <div className={classes.content__center__hello}>Hello Kite Factory...</div>\r\n                    <div className={classes.content__center__welcome}>Welcome to your Inclusion and Belonging Journey</div>\r\n                </div>\r\n                }\r\n\r\n                {!showWelcomeScreen &\r\n                <div id=\"content_center\" className={classes.content__center} \r\n                    style={{marginTop : height > 800 ? `6px` : `14px`}}>\r\n                    <ColorfulCircle height = {height}/>\r\n                    <div className={classes.content__center__button}>\r\n                        <Button text=\"Our mission\" showArrow buttonStyle={{backgroundColor: \"#212A47\", border: \"none\", color: \"white\"}}/>\r\n                    </div>\r\n                    <div className={classes.content__center__maturityIndex} \r\n                        style={{top: height > 800 ? `calc(50% - 68px)` : `calc(50% - 74px)`}}>\r\n                        Your Inclusion <br/>\r\n                        Maturity Index\r\n                    </div>\r\n                </div>\r\n                } */}\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Entrence;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\allears.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\activeNavLinkDecoration.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\ColorfulCircle.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\ScoreCard\\ScoreCard.js",["213","214","215","216"],"import React, { useState } from 'react';\r\nimport Button from '../Buttons/Button';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\n\r\nimport classes from './ScoreCard.module.css';\r\n\r\nconst ScoreCard = ({title, points, maxPoints, questions}) => {\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    let plusSign = \r\n    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"9\" cy=\"9\" r=\"9\" fill=\"#46EEB2\"/>\r\n        <path d=\"M5 9H9M9 9V5M9 9H13M9 9V13\" stroke=\"white\" stroke-width=\"1.5\"/>\r\n    </svg>\r\n\r\n    let minusSign = \r\n    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"9\" cy=\"9\" r=\"9\" fill=\"#FF6157\"/>\r\n        <path d=\"M5 9H9H13\" stroke=\"white\" stroke-width=\"1.5\"/>\r\n    </svg>\r\n\r\n    return (\r\n        <div className={classes.scoreCard}>\r\n            <header>\r\n                <div className={classes.scoreCard__title}>{title}</div>\r\n                <div className={classes.scoreCard__points}>{points} Points</div>\r\n            </header>\r\n\r\n            <ProgressBar value={points} maxValue={maxPoints} />\r\n\r\n            <section className={classes.scoreCard__questions}>\r\n                {questions.map(function writeSingleQuestion(q, i){\r\n                    if(i > 2) return;\r\n                    return (\r\n                        <div key={`q_${i}`}\r\n                            className={classes.scoreCard__questions__singleQuestion}>\r\n                            \r\n                            {q.sign == \"plus\" ? \r\n                            <div className={classes.sign}>{plusSign}</div>\r\n                            :\r\n                            <div className={classes.sign}>{minusSign}</div>}\r\n                            {`${q.question}`} \r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n                {\r\n                    questions.length > 3 && !expanded ? \r\n                    <div className={classes.scoreCard__questions__expandButton}>\r\n                        <Button \r\n                            text = {\"Expand\"} \r\n                            showArrow \r\n                            buttonStyle={{color: \"#466BEE\", border: \"1px solid #E9EBEE\", backgroundColor: \"white\"}}\r\n                            onClick = {() => setExpanded(!expanded)} />\r\n                    </div>\r\n                    :\r\n                    questions.map(function writeSingleQuestion(q, i){\r\n                        if(i < 3) return;\r\n                        return (\r\n                            <div key={`q_${i}`}\r\n                                className={classes.scoreCard__questions__singleQuestion}>\r\n                                \r\n                                {q.sign == \"plus\" ? \r\n                                <div className={classes.sign}>{plusSign}</div>\r\n                                :\r\n                                <div className={classes.sign}>{minusSign}</div>}\r\n                                {`${q.question}`} \r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreCard;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Buttons\\Button.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\Dropdown\\Dropdown.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\hooks\\useWindowDimensions.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\HumanRelations\\HumanRelations.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\HeroSection\\HeroSection.js",["217","218","219"],"import React from 'react';\r\nimport SectionFooter from '../SectionFooter/SectionFooter';\r\n\r\nimport manImg from './../../../../assets/img/manImg.png';\r\nimport womanImg from './../../../../assets/img/womanImg.png';\r\nimport peopleImg from './../../../../assets/img/peopleImg.png';\r\n\r\nimport SignatureJamesSmith from './../../../../assets/svg/signatureJamesSmith';\r\n\r\nimport classes from './HeroSection.module.css';\r\n\r\nconst HeroSection = () => {\r\n\r\n    return (\r\n        <section className={classes.hero}>\r\n            <div className={classes.hero__content}>\r\n                <div className={classes.hero__content__title}>The Kite Factory</div>\r\n                <div className={classes.hero__content__subtitle}>2025 Vision</div>\r\n\r\n\r\n                <div className={classes.hero__content__figures}>\r\n                    <figure className={classes.hero__content__figure1}>\r\n                        <img src={manImg} alt=\"man image\"/>\r\n                        <figcaption>\r\n                            <div className={classes.hero__content__figure1__div}>\r\n                                <div className={classes.apostrophe}>“</div>\r\n                                <div className={classes.hero__content__figureX__div__text}>We believe in inclusion and what it’s impact to our business strategy</div>\r\n                                <div className={classes.signature}><SignatureJamesSmith /></div>\r\n\r\n                                <div className={classes.hero__content__figure1__div__blueBallOne}></div>\r\n                            </div>\r\n                        </figcaption>\r\n                    </figure>\r\n                    \r\n                    <figure className={classes.hero__content__figure2}>\r\n                        <img src={peopleImg} alt=\"people image\"/>\r\n                        <figcaption>\r\n                            <div className={classes.hero__content__figure2__div}>\r\n                                <div className={classes.hero__content__figureX__div__text}>\r\n                                    At least half of our global workforce will be women\r\n                                </div>\r\n\r\n                                <div className={classes.hero__content__figure2__div__blueBallTwo}></div>\r\n                            </div>\r\n                        </figcaption>\r\n                    </figure>\r\n\r\n                    <figure className={classes.hero__content__figure3}>\r\n                        <img src={womanImg} alt=\"woman image\"/>\r\n                        <figcaption>\r\n                            <div className={classes.hero__content__figure3__div}>\r\n                                <div className={classes.hero__content__figureX__div__text}>\r\n                                    At least a quarter of our UK workforce will be under-represented minorities\r\n                                </div>\r\n                            </div>\r\n                        </figcaption>\r\n                    </figure>\r\n\r\n                </div>\r\n            </div>\r\n            <SectionFooter />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HeroSection;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\Marketing\\Marketing.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\DecorationOblique.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\ProgressBar\\ProgressBar.js",["220"],"import React, { useEffect } from 'react';\r\n\r\nconst ProgressBar = ({value, maxValue}) => {\r\n\r\n    return (\r\n        <svg width= \"100%\" height=\"10px\" viewBox=\"0 0 100 20\" preserveAspectRatio=\"none\">\r\n            {console.log(value, maxValue)}\r\n            <rect x=\"0\" y=\"0\"\r\n                width=\"100%\"\r\n                height=\"20\"\r\n                style={{fill: \"#EAEDF6\"}}></rect>\r\n            \r\n            <rect x=\"0\" y=\"0\"\r\n                width={`${100 * value/maxValue}%`}\r\n                height=\"20\"\r\n                style={{fill: \"#466BEE\"}}></rect>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\signatureJamesSmith.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\ImportanceGraph\\ImportanceGraph.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\DescriptionFrame\\DescriptionFrame.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\HumanResourcesCard\\HumanResourcesCard.js",["221"],"import React from 'react';\r\n\r\nimport classes from './HumanResourcesCard.module.css';\r\nimport BarChart from '../../assets/svg/BarChart';\r\n\r\nconst HumanResourcesCard = ({bgColor, middleColor, description, number, footnote=\"\"}) => {\r\n\r\n    return (\r\n        <div className={classes.hrCard} style={{backgroundColor: bgColor}}>\r\n            <div className={classes.hrCard__content}>\r\n\r\n                <div className={classes.hrCard__content__barChart} style={{backgroundColor: middleColor}}>    \r\n                    <BarChart />\r\n                </div>\r\n                \r\n                <div className={classes.hrCard__content__info}>\r\n                    <div className={classes.hrCard__content__info__description}>{description}</div>\r\n                    <div className={classes.hrCard__content__info__number}>{number}</div>\r\n                    {\r\n                        footnote != \"\" ?\r\n                        <div className={classes.hrCard__content__info__footnote}>{footnote}</div>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HumanResourcesCard;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\SectionFooter\\SectionFooter.js",["222"],"import React from 'react';\r\n\r\nimport classes from './SectionFooter.module.css';\r\nimport Ig from './../../../../assets/svg/Ig';\r\nimport Mail from './../../../../assets/svg/Mail';\r\nimport Twitter from '../../../../assets/svg/twitter';\r\n\r\nimport { TwitterButton, TwitterCount, EmailButton } from \"react-social\";\r\n\r\nconst SectionFooter = () => {\r\n    \r\n    let url = \"https://google.com\";\r\n\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <div className={classes.footer__item}>\r\n                <Ig />\r\n            </div>\r\n            <div className={classes.footer__item}>\r\n                <TwitterButton url={url} style={{border: \"none\", background: \"none\"}}>\r\n                    {/* twitter count shows how many times this button is clicked..\r\n                    by default 1000 is free, more clicks has to be paid for */}\r\n                    {/* <TwitterCount url={url} /> */}\r\n                    <Twitter />\r\n                </TwitterButton>\r\n            </div>\r\n            <div className={classes.footer__item}>\r\n                <EmailButton url={url} style={{border: \"none\", background: \"none\"}}>\r\n                    <Mail />\r\n                </EmailButton>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default SectionFooter;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\MeasurmentGraph\\MeasurmentGraph.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\SimpleDescriptionFrame\\SimpleDescriptionFrame.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\ComparisonGraph\\ComparisonGraph.js",["223"],"import React from 'react';\r\n\r\nconst ComparisonGraph = ({array=[], lineDensity, maxValue, percentage=true}) => {\r\n    lineDensity = 5\r\n\r\n    /*\r\n    array = [\r\n        {\r\n            data: [18, 22.9],\r\n            label: \"IPA Ethnic Diversity\"\r\n        },\r\n        {\r\n            data: [52.6, 45.9],\r\n            label: \"IPA Agency Census Women\"\r\n        }\r\n    ]\r\n    */\r\n\r\n    array.map(function setEmptyArrayOfColorsIfColorsAreNotProvided(el){\r\n        if(!el.colors)\r\n            el.colors = []    \r\n    })\r\n\r\n    const svgViewBoxWidth = 200;\r\n    const svgViewBoxHeight = 100;\r\n\r\n    var totalNumberOfComparisonBars = array.reduce(function numberOfBarsInGroup(acc, comparisonGroup){\r\n        return acc + comparisonGroup.data.length; \r\n    }, 0);\r\n\r\n    var averageNumberOfComparisonBarsPerGroup = totalNumberOfComparisonBars / array.length;\r\n\r\n    var comparisonGroupsWidth = array.reduce(function calculateWidthForOneComparisonGroup(acc, comparisonGroup){\r\n        let spaceBetweenTwoConsecutiveBars = 1 / 3;\r\n        let numberOfBars = comparisonGroup.data.length;\r\n        let numberOfSpacesBetweenBars = numberOfBars - 1;\r\n        return acc + numberOfBars + numberOfSpacesBetweenBars * spaceBetweenTwoConsecutiveBars;\r\n    }, 0);\r\n\r\n    var spaceBetweenComparisonGroupsWidth = comparisonGroupsWidth / array.length / averageNumberOfComparisonBarsPerGroup;\r\n\r\n    var numberOfSpacesBetweenComparisonGroups = array.length + 1;\r\n\r\n    var barWidth = comparisonGroupsWidth / totalNumberOfComparisonBars;\r\n\r\n    var mappingRatio = (svgViewBoxWidth-10)/ (comparisonGroupsWidth + spaceBetweenComparisonGroupsWidth * numberOfSpacesBetweenComparisonGroups);\r\n\r\n    var maximumValueY = \r\n    !maxValue ?\r\n    array.reduce(function findMaxInObject(acc, el){\r\n        let elDataMax = findMaximumValue(el.data);\r\n        if(acc < elDataMax)\r\n            return elDataMax\r\n        return acc;\r\n    }, array[0].data[0])\r\n    :\r\n    maxValue\r\n\r\n    return (\r\n        <svg width=\"100%\" viewBox=\"0 0 200 100\" preserveAspectRatio=\"none\">\r\n            {[...Array(lineDensity).keys()].map(function drawHorizontalLineBehindCurveAndHeightLabel(el){\r\n                let text = `${(maximumValueY - el / (lineDensity - 1) * maximumValueY)}`\r\n                \r\n                text = percentage ? text += \"%\" : text\r\n\r\n                return(\r\n                    <g key={el}>\r\n                        <text\r\n                            x=\"8\" y={`${10 + el * 80 / (lineDensity-1)}`}\r\n                            alignmentBaseline=\"middle\"\r\n                            textAnchor=\"end\"\r\n                            fontSize={lineDensity > 20 ? \"2\" : \"3\"}\r\n                            fontFamily=\"Gordita Medium\">\r\n                                {text}\r\n                        </text>\r\n\r\n                        <path stroke=\"#EAEBEE\" strokeWidth=\"0.2\" d={`M10 ${10 + el * 80 / (lineDensity-1)} H200`}/>\r\n                    </g>\r\n                )\r\n            })}\r\n            {/* Mesic Ferhad - Poslovni covjek*/}\r\n            {array.reduce(function drawComparisonGroup(accumulator, comparisonGroup, i){\r\n                var startingPointOfGroupDrawing = accumulator[0]\r\n                var labelPointX1 = startingPointOfGroupDrawing;\r\n\r\n                accumulator[1] = \r\n                [   \r\n                    ...accumulator[1],\r\n\r\n                    ...comparisonGroup.data.map(function drawSingleBar(el, i){\r\n\r\n                        let barLabelColor = comparisonGroup.colors[i] ? comparisonGroup.colors[i] : \"#656C82\"\r\n\r\n                        startingPointOfGroupDrawing += barWidth * mappingRatio;\r\n                        let heightOfBar = calculateHeightOfBar(el, maximumValueY)\r\n                        return (\r\n                            <g key = {startingPointOfGroupDrawing}>\r\n                                <text\r\n                                    // Formula for getting middle point of bar on X-axis\r\n                                    // x = (startingPointOfBar + endingPointOfBar) / 2 \r\n                                    x={(startingPointOfGroupDrawing + startingPointOfGroupDrawing + \r\n                                        (barWidth * 0.75 * mappingRatio))\r\n                                        /2} \r\n                                    // 90 = 100 - (5 from top + 5 from bottom) for empty space\r\n                                    y={90 - heightOfBar - 2.5}\r\n                                    textAnchor=\"middle\"\r\n                                    fontSize=\"3\"\r\n                                    fontFamily=\"Gordita Medium\"\r\n                                    fill={barLabelColor}>\r\n                                        {el}\r\n                                </text>\r\n                            <rect                 \r\n                                x={startingPointOfGroupDrawing} \r\n                                // 90 = 100 - (5 from top + 5 from bottom) for empty space\r\n                                y={90 - heightOfBar}\r\n                                // barAndSpaceWidth is 0.75 and space between 2 bars is 0.25\r\n                                width={barWidth * 0.75 * mappingRatio} \r\n                                height={heightOfBar}\r\n                                fill=\"blue\"\r\n                                opacity=\"0.6\"/>\r\n                            </g>\r\n                        )\r\n                })\r\n                ]\r\n                \r\n                let labelPointX2 = startingPointOfGroupDrawing + barWidth * mappingRatio;\r\n\r\n                accumulator[1] = \r\n                [\r\n                    ...accumulator[1],\r\n                    ...[\r\n                        <text key = {`group_label_ + ${labelPointX1}`}\r\n                            x={(labelPointX1 + labelPointX2) / 2}\r\n                            y=\"96\"\r\n                            fontSize=\"3\"\r\n                            fontFamily=\"Gordita Medium\">\r\n                                {comparisonGroup.label}\r\n                        </text>\r\n                    ]\r\n                ]\r\n                // After 1 group is drawn we continue to the drawing of next group so we\r\n                // have to add empty space for space between groups\r\n                startingPointOfGroupDrawing += spaceBetweenComparisonGroupsWidth * mappingRatio;\r\n                // Update starting point for next group drawing\r\n                accumulator[0] = startingPointOfGroupDrawing; \r\n\r\n                return accumulator;\r\n            }, [10, []])[1]}\r\n            {/* Mesic Ferhad - Poslovni covjek*/}\r\n            \r\n        </svg>\r\n    )\r\n\r\n    function findMaximumValue(array){\r\n        return array.reduce(function findMax(acc, el){\r\n            if (acc < el)\r\n                return el\r\n            return acc\r\n        }, array[0])\r\n    }\r\n\r\n    function calculateHeightOfBar(value, maxValue){\r\n        return value / maxValue * (svgViewBoxHeight - 20);\r\n    }\r\n}   \r\n\r\nexport default ComparisonGraph;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\PieChartComplex\\PieChartComplex.js",["224"],"import React from 'react';\r\n\r\nconst PieChartComplex = ({array = []}) => {\r\n    \r\n    array = [\r\n        {\r\n            description: 'Latina',\r\n            percentage: 35,\r\n            color: \"#FAA745\",\r\n            emphasized: \"true\"\r\n        },\r\n        {\r\n            description: \"Native Hawaian\",\r\n            percentage: 35,\r\n            color: \"#8F8FE1\"\r\n        },\r\n        {\r\n            description: \"Asian\",\r\n            percentage: 30,\r\n            color: \"#67C8FF\"\r\n        }\r\n    ]\r\n    /*\r\n    array = [\r\n        {\r\n            description: 'Coral',\r\n            percentage: 5,\r\n            color: \"#FAA745\",\r\n            emphasized: \"true\"\r\n        },\r\n        {\r\n            description: 'Grey',\r\n            percentage: 20,\r\n            color: \"grey\",\r\n            emphasized: \"true\"\r\n        },\r\n        {\r\n            description: 'Indigo',\r\n            percentage: 15,\r\n            color: \"#8F8FE1\"\r\n        },\r\n        {\r\n            description: 'Red',\r\n            percentage: 30,\r\n            color: \"red\",\r\n            emphasized: \"true\"\r\n        },\r\n        {\r\n            description: 'SeaGreen',\r\n            percentage: 30,\r\n            color: \"#67C8FF\"\r\n        }\r\n    ]\r\n    */\r\n    function editDataPercentage(array){\r\n        //ex: array of 20 40 10 30 makes into\r\n        // 100 80 40 30 \r\n\r\n        array.reduce((accumulator, el, i) => {\r\n            let svgPercentage = accumulator + el.percentage\r\n            array[i] = {\r\n                ...el, \r\n                percentageForSVG: svgPercentage,\r\n                percentageForLabel: 360 / 100 * (accumulator + el.percentage / 2) \r\n            }\r\n            return svgPercentage\r\n        }, 0);\r\n\r\n        return array.reverse();\r\n    }\r\n\r\n    var editedArray = editDataPercentage(array);\r\n\r\n    function coordinateForLabel(percentage){\r\n        if(percentage >= 0 && percentage < 90)\r\n            return {\r\n                x: 18 - Math.sin(percentage),\r\n                y: 18* Math.cos(63) - 6.5\r\n            }\r\n        else if(percentage >= 90 && percentage < 180)\r\n            return {\r\n                x: 2,\r\n                y: 7\r\n            }\r\n    }\r\n\r\n    return (\r\n        <svg style={{width: \"300px\", height: \"300px\"}} height=\"20\" width=\"20\" viewBox=\"0 0 50 50\">\r\n            {/* Mesic Ferhad - Poslovni covjek*/}\r\n            {editedArray.map(function createStrokeAccordingToPercentage(el){\r\n                return (\r\n                    <circle\r\n                        key={`${el.description}`} \r\n                        r=\"17\" cx=\"25\" cy=\"25\"\r\n                        fill=\"transparent\"\r\n                        stroke={`${el.color}`}\r\n                        strokeWidth=\"4\"\r\n                        strokeDasharray={`calc(${el.percentageForSVG} * (34 * 3.1416)/100) calc(34 * 3.1416)`}\r\n                        transform=\"rotate(-90) translate(-50)\"/>\r\n                )        \r\n            })}\r\n\r\n            {editedArray.map(function createPieForEmphasized(el){\r\n                return ( \r\n                    <g key={`emphasized_${el.description}`}>\r\n                        <circle\r\n                            r=\"9\" cx=\"25\" cy=\"25\"\r\n                            fill=\"transparent\"\r\n                            stroke={el.emphasized ? el.color : \"white\"}\r\n                            strokeOpacity={el.emphasized ? \"0.3\" : \"1\"}\r\n                            strokeWidth=\"18\"\r\n                            strokeDasharray={`calc(${el.percentageForSVG} * (18 * 3.1416)/100) calc(18 * 3.1416)`}\r\n                            transform=\"rotate(-90) translate(-50)\"/>\r\n                        {/* Funkcija kruga ispod je da restartuje pozadinu na bijelo tako da se izbjegne preklapanje boja */}\r\n                        <circle\r\n                            r=\"9\" cx=\"25\" cy=\"25\"\r\n                            fill=\"transparent\"\r\n                            stroke={\"white\"}\r\n                            strokeOpacity={el.emphasized ? \"0.3\" : \"1\"}\r\n                            strokeWidth=\"18\"\r\n                            strokeDasharray={`calc(${el.percentageForSVG} * (18 * 3.1416)/100) calc(18 * 3.1416)`}\r\n                            transform=\"rotate(-90) translate(-50)\"/>\r\n                    </g>\r\n                )\r\n            })}\r\n            {editedArray.map(function createCircleForLabel(el,i){\r\n                return (\r\n                    <circle \r\n                        id={`circle_${el.description}`}\r\n                        key={`circle_${el.description}`} \r\n                        r=\"5\" cx=\"25\" cy=\"5\"\r\n                        fill={el.emphasized ? \"#090909\" : \"white\"}\r\n                        transform-origin=\"25\"\r\n                        transform={`rotate(${el.percentageForLabel})`}/>\r\n                )\r\n            })\r\n            }\r\n\r\n            {editedArray.map(function createLabelInCircle(el){\r\n                return (\r\n                    <text\r\n                        key={`label_${el.description}`} \r\n                        x=\"25\" y=\"5\" \r\n                        textAnchor=\"middle\"\r\n                        fill={el.emphasized ? \"white\" : \"#3F5695\"}\r\n                        fontSize=\"1.7\"\r\n                        alignmentBaseline=\"central\" \r\n                        transform-origin=\"25\"\r\n                        fontFamily=\"Gordita\"\r\n                        transform={`rotate(${0})\r\n                        translate(${18 - Math.sin(63)}, ${8 + (18 - 18 * Math.cos(63))})`}>\r\n                            <tspan x=\"25\" dy=\"-1\">{`${el.percentage}%`}</tspan>\r\n                            <tspan x=\"25\" dy=\"2.5\">{`${el.description}`}</tspan>\r\n                    \t</text>\r\n                )\r\n            })}\r\n        </svg>\r\n    )\r\n\r\n}\r\n\r\nexport default PieChartComplex;","C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\LineGraph\\LineGraph.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\HumanRelations\\components\\PercentageGraphs\\PercentageGraphs.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\LandingScreen\\components\\HumanRelations\\components\\PeopleGraphs\\PeopleGraphs.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\Ig.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\Dash.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\BarChart.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\Mail.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\twitter.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\PercentageGraph\\PercentageGraph.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\PeoplesGraph\\PeoplesGraph.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\assets\\svg\\Man.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\Dashboard\\Dashboard.js",["225","226"],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\pages\\Dashboard\\components\\HRSection\\HRSection.js",[],"C:\\Users\\Lenovo\\Desktop\\oblique\\allears\\src\\components\\PieChartComplex\\PieChartComplexDummyGraph.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":21},{"ruleId":"235","severity":1,"message":"236","line":6,"column":48,"nodeType":"237","messageId":"238","endLine":6,"endColumn":50},{"ruleId":"231","severity":1,"message":"239","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":27},{"ruleId":"231","severity":1,"message":"240","line":1,"column":29,"nodeType":"233","messageId":"234","endLine":1,"endColumn":38},{"ruleId":"231","severity":1,"message":"241","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":14},{"ruleId":"231","severity":1,"message":"242","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":14},{"ruleId":"231","severity":1,"message":"243","line":9,"column":8,"nodeType":"233","messageId":"234","endLine":9,"endColumn":16},{"ruleId":"231","severity":1,"message":"244","line":10,"column":10,"nodeType":"233","messageId":"234","endLine":10,"endColumn":25},{"ruleId":"245","severity":1,"message":"246","line":36,"column":22,"nodeType":"247","messageId":"248","endLine":53,"endColumn":14},{"ruleId":"231","severity":1,"message":"249","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":30,"column":40,"nodeType":"237","messageId":"238","endLine":30,"endColumn":42},{"ruleId":"235","severity":1,"message":"236","line":44,"column":40,"nodeType":"237","messageId":"238","endLine":44,"endColumn":42},{"ruleId":"235","severity":1,"message":"236","line":57,"column":40,"nodeType":"237","messageId":"238","endLine":57,"endColumn":42},{"ruleId":"231","severity":1,"message":"240","line":1,"column":29,"nodeType":"233","messageId":"234","endLine":1,"endColumn":38},{"ruleId":"250","severity":1,"message":"251","line":17,"column":10,"nodeType":"233","messageId":"252","endLine":17,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":34,"column":31,"nodeType":"255","messageId":"256","endLine":34,"endColumn":38},{"ruleId":"235","severity":1,"message":"236","line":39,"column":37,"nodeType":"237","messageId":"238","endLine":39,"endColumn":39},{"ruleId":"253","severity":1,"message":"254","line":59,"column":35,"nodeType":"255","messageId":"256","endLine":59,"endColumn":42},{"ruleId":"235","severity":1,"message":"236","line":64,"column":41,"nodeType":"237","messageId":"238","endLine":64,"endColumn":43},{"ruleId":"257","severity":1,"message":"258","line":23,"column":25,"nodeType":"259","endLine":23,"endColumn":60},{"ruleId":"257","severity":1,"message":"258","line":36,"column":25,"nodeType":"259","endLine":36,"endColumn":66},{"ruleId":"257","severity":1,"message":"258","line":49,"column":25,"nodeType":"259","endLine":49,"endColumn":64},{"ruleId":"231","severity":1,"message":"240","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"235","severity":1,"message":"260","line":20,"column":34,"nodeType":"237","messageId":"238","endLine":20,"endColumn":36},{"ruleId":"231","severity":1,"message":"261","line":8,"column":25,"nodeType":"233","messageId":"234","endLine":8,"endColumn":37},{"ruleId":"253","severity":1,"message":"262","line":19,"column":15,"nodeType":"263","messageId":"264","endLine":19,"endColumn":67},{"ruleId":"231","severity":1,"message":"265","line":74,"column":14,"nodeType":"233","messageId":"234","endLine":74,"endColumn":32},{"ruleId":"231","severity":1,"message":"266","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":23},{"ruleId":"231","severity":1,"message":"267","line":10,"column":8,"nodeType":"233","messageId":"234","endLine":10,"endColumn":33},"no-native-reassign",["268"],"no-negated-in-lhs",["269"],"no-unused-vars","'LandingScreen' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'useEffect' is defined but never used.","'Header' is defined but never used.","'Footer' is defined but never used.","'Entrence' is defined but never used.","'EntrenceContext' is defined but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","'Gordita' is defined but never used.","no-redeclare","'setToSeen' is already defined.","redeclared","array-callback-return","Array.prototype.map() expects a return value from function 'writeSingleQuestion'.","ReturnStatement","expectedReturnValue","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","Expected '!==' and instead saw '!='.","'TwitterCount' is defined but never used.","Array.prototype.map() expects a return value from function 'setEmptyArrayOfColorsIfColorsAreNotProvided'.","FunctionExpression","expectedInside","'coordinateForLabel' is defined but never used.","'PieChartComplex' is defined but never used.","'PieChartComplexDummyGraph' is defined but never used.","no-global-assign","no-unsafe-negation"]